@model WebApplication3.Models.Review
@{
    ViewBag.Title = "MyReviews";
}


@{ var reviewList = new List<WebApplication3.Models.Review>(ViewBag.MyReviews);}
@helper CreateTable(List<WebApplication3.Models.Review> review)
{

    <div class="container">
        <div class="row">   
            @foreach (var d in review)

            {
            <div class="col-4">
                <div class="card border-warning card_margin card_color" style="margin-bottom: 30px; margin-left: 15px; margin-right: 15px;">
                    <!--<img src="..." class="card-img-top" alt="...">-->
                    <div class="card-body ">
                        <h5 class="modal-title" id="gameModalLabel" style="color:#ffd800; font-weight:600;">@d.Game </h5>
                        <div>
                            <h5 class="card-title">@d.Username  </h5>
                            <h5 class="card-title" style="margin-bottom:30px;">Оценка: @d.ReviewScore</h5>
                        </div>
                        <p class="card-text text-truncate" style="margin-bottom:30px;">@d.ReviewText</p>
                        <a href="#exampleModal1" id="showModal" class="btn btn-outline-warning stretched-link" data-bs-toggle="modal" data-bs-target="#modal-@d.ReviewId" style="margin-bottom:30px;">Показать больше</a>
                    </div>
                </div>
            </div>
            <div id="modal-@d.ReviewId" class="modal fade border-warning" tabindex="-1">
                <div class="modal-dialog modal-dialog-scrollable" style="width:100vh; max-width:none !important">
                    <div class="modal-content">
                        <div class="modal-header card_color">

                            <h5 class="modal-title" id="gameModalLabel" style="color:#ffd800; font-weight:600;">@d.Game </h5>
                            <h5 class="modal-title" id="exampleModalLabel" style="margin-left:100px">@d.Username  Оценка: @d.ReviewScore</h5>


                        </div>
                        <div class="card_color">
                            @Html.DropDownListFor(model => model.ReviewScore, new SelectList(ViewBag.Scores), new { @id = "Score" + d.ReviewId, @class= "form-select dropdown-menu-dark btn btn-secondary"})
                            @Html.Hidden("ReviewId", d.ReviewId, new { @id = "ReviewId" + d.ReviewId })
                            @Html.Hidden("Game", d.Game, new { @id = "Game" + d.ReviewId })
                            @Html.Hidden("GameId", d.GameId, new { @id = "GameId" + d.ReviewId })
                            @Html.Hidden("UserId", d.UserId, new { @id = "UserId" + d.ReviewId })
                            @Html.Hidden("Username", d.Username, new { @id = "Review" + d.ReviewId })
                            @Html.TextArea("ReviewText", d.ReviewText, new { @minlength = 10, @class = "form-control textarea_true textinput", @id = "Text" + d.ReviewId })
                        </div>
                        <div class="modal-footer card_color">
                            <div>
                                <button type="submit" name="choose" class="btn btn-light">Редактировать отзыв</button>
                            </div>
                            @d.ReviewText
                            @d.Game
                            @d.ReviewId
                            @d.ReviewTime
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
}
@*<script>
    function getInputs(text)
    {
        var gameId = document.getElementById("Text" + text).value;
        alert(gameId);
        fetch(`/Review/MyReviews/${gameId}`, {
            method: 'POST',
            headers: new Headers(),
            body: String(gameId)
        })
            .then(response => response.json())
            .then(response => alert(response))
    }
</script>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @CreateTable(reviewList)
}

<style type="text/css">
    .card_color {
        background-color: #303030;
    }

    .card_margin {
        margin-top: 15px;
    }

    .modal_height {
        height: 80vh;
    }

    .word_wrap {
        word-wrap: break-word;
    }

    .textinput {
        max-width: inherit !important;
        min-height: inherit;
        height: 70vh;
    }
    .textarea_true {
        background-color: #303030;
        border: 0px;
        color: white;
        margin-left: auto;
        margin-right: auto;
    }

        .textarea_true:focus {
            background-color: #303030;
            border: 0px;
            color: white;
        }
</style>
@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @*  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
}
@Scripts.Render("~/scripts/jquery-3.6.0.min.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")