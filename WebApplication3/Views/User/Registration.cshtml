@model WebApplication3.Models.User
@{
    ViewBag.Title = "Registration";
}
<div>
    
    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <strong>Success!</strong>@ViewBag.Message
            </div>
        }
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-signin">
                <h2>Регистрация</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-signin">
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "pos border-warning form_color", @placeholder = "Имя пользователя" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "danger_color" })
                    
                </div>
                <div class="form-signin">
                    @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "pos border-warning form_color", @placeholder = "Email адресс" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "danger_color" })
                        @Html.ValidationMessage("EmailExist", new { @class = "danger_color" })
                    
                </div>
                <div class="form-signin">
                    @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "pos border-warning form_color", @placeholder = "Пароль" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "danger_color" })
                    
                </div>
                
                <div>
                    <input type="submit" value="Зарегистрироваться" class="buttons btn btn-outline-warning border-warning" />
                </div>
                
            </div>
            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong>@ViewBag.Message
                </div>
            }
        }
    }

    <div>
        @Html.ActionLink("Войти в существующий аккаунт", "Login")
    </div>
</div>

<style>
    .form-signin {
        width: 100%;
        max-width: 300px;
        padding: 15px;
        margin: auto;
    }

    .pos {
        width: 200px;
        position: center;
        padding-right: 15px;
        padding-left: 15px;
        background: #fff;
        border: 1px solid;
    }

    .child {
        height: 50px;
        float: right;
        width: 60%;
        position: center;
    }

    .buttons {        
        height: 50px;
        text-decoration: none;
        padding-top: 9px;   
        text-align: center;
        line-height: 20px;
        font: normal 17px arial;
        background: none;
        border: 1px solid;
    }
    .form_color {
        color: #ffd800;
        background-color: transparent;
        border: 2px solid;
    }

    .danger_color {
        color: #f91b1b
    }
</style>

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}


